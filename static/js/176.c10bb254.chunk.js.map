{"version":3,"file":"static/js/176.c10bb254.chunk.js","mappings":"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","sources":["components/movies/movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst MoviesWrapper = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst CenteredWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n\r\n  h1 {\r\n    font-size: 44px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    color: #06457F;\r\n  }\r\n`;\r\n\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n\r\n  input {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  button {\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    background-color: #06457F;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n\r\n    &:hover {\r\n      background-color: #5292CE;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MovieItem = styled.li`\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  width: calc(33.33% - 20px);\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #333;\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    object-fit: cover;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n\r\n  .title {\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .genre {\r\n    font-style: italic;\r\n    color: #777;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst Movies = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch genres\r\n    axios\r\n      .get('https://api.themoviedb.org/3/genre/movie/list', {\r\n        params: {\r\n          api_key: '23f77f1a7852117720a48008d2ea32a0',\r\n        },\r\n      })\r\n      .then(response => {\r\n        setGenres(response.data.genres);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching genres:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.themoviedb.org/3/search/movie',\r\n        {\r\n          params: {\r\n            api_key: '23f77f1a7852117720a48008d2ea32a0',\r\n            query: searchTerm,\r\n          },\r\n        }\r\n      );\r\n      setSearchResults(response.data.results);\r\n    } catch (error) {\r\n      console.error('Error searching movies:', error);\r\n    }\r\n  };\r\n\r\n  const getGenreNames = genreIds => {\r\n    return genreIds\r\n      .map(genreId => {\r\n        const genre = genres.find(g => g.id === genreId);\r\n        return genre ? genre.name : '';\r\n      })\r\n      .filter(Boolean) // Remove any empty strings\r\n      .join(', ');\r\n  };\r\n\r\n  return (\r\n    <MoviesWrapper>\r\n      <CenteredWrapper>\r\n        <h1>Search Movies</h1>\r\n        <SearchWrapper>\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={e => setSearchTerm(e.target.value)}\r\n          />\r\n          <button onClick={handleSearch}>Search</button>\r\n        </SearchWrapper>\r\n      </CenteredWrapper>\r\n      <ul>\r\n        {searchResults.map(movie => (\r\n          <MovieItem key={movie.id}>\r\n            <Link to={`/movies/${movie.id}`}>\r\n              <img\r\n                src={\r\n                  movie.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n                    : 'замінний-шлях'\r\n                }\r\n                alt={movie.title}\r\n              />\r\n              <span className=\"title\">{movie.title}</span>\r\n              <span className=\"genre\">{getGenreNames(movie.genre_ids)}</span>\r\n            </Link>\r\n          </MovieItem>\r\n        ))}\r\n      </ul>\r\n    </MoviesWrapper>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"names":["MoviesWrapper","styled","_templateObject","_taggedTemplateLiteral","CenteredWrapper","_templateObject2","SearchWrapper","_templateObject3","MovieItem","_templateObject4","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","genres","setGenres","useEffect","axios","params","api_key","then","response","data","catch","error","console","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","query","sent","results","t0","stop","apply","arguments","_jsxs","children","_jsx","type","value","onChange","e","target","onClick","map","movie","Link","to","concat","id","src","poster_path","alt","title","className","genreIds","genre_ids","genreId","genre","find","g","name","filter","Boolean","join"],"sourceRoot":""}